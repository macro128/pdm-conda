[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project.urls]
Homepage = "https://github.com/macro128/pdm-conda"
Changelog = "https://github.com/macro128/pdm-conda/blob/main/CHANGELOG.md"

[project.entry-points.pdm]
conda = "pdm_conda:main"

[project]
name = "pdm-conda"
description = "A PDM plugin to resolve/install/uninstall project dependencies with Conda"
requires-python = ">=3.10,<3.13"
authors = [
    { name = "Marcos Pastorini" }
]
keywords = ["pdm", "plugin", "conda"]
readme = "README.md"
license = { text = "MIT" }
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

dependencies = [
    "asyncpg~=0.28.0",
]

[project.optional-dependencies]
db = [
    "python-dotenv~=1.0.0",
    #    "pydantic~=1.10.8",
    "psycopg2-binary~=2.9.7",
    #    "alembic~=1.12.1",
    #    "sqlalchemy~=1.4.41",
    #    "fastapi~=0.104.0",
    #    "cryptography~=41.0.5",
    #    "python-slugify~=8.0.1",
    #    "flatdict~=4.0.1",
    #    "ormar~=0.12.2",
    #    "typing-extensions~=4.8.0",
    #    "aiobotocore~=2.7.0",
    #    "pycountry~=22.3.5",
]
services = [
    "pdm-conda[db]",
    #    "prefect-client~=2.14.2",
    #    "babel~=2.13.1",
    #    "python-telegram-bot~=20.6",
    #    "python-ffmpeg~=2.0.4",
    #    "streamlink~=6.3.1",
]
#prefect-server = [
#    "prefect~=2.14.2",
#]
prefect-agent = ["pdm-conda[services]"]
api = [
    "pdm-conda[services]",
    #    "orjson~=3.9.10",
    #    "python-multipart~=0.0.6",
    #    "fastapi-crudrouter~=0.8.6",
    #    "fastapi_rss @ git+https://github.com/macro128/fastapi_rss.git",
]

[tool.pdm.dev-dependencies]
s3-server = [
    "moto[server]",
]
dev = [
    "moto[s3]~=4.2.9",
    #    "pytest~=7.4.3",
    #    "pytest-mock~=3.12.0",
    #    "pytest-cov~=4.1.0",
    #    "pytest-random-num~=1.0.13",
    #    "httpx~=0.25.0",
    #    "responses~=0.23.1",
    #    "mimesis~=11.1.0",
    #    "dateparser~=1.1.8",
]

[tool.pdm.conda]
runner = "micromamba"
channels = ["conda-forge"]
as-default-manager = true
batched-commands = true
excludes = [
    "prefect-client",
    "streamlink",
    "moto",
    "python-telegram-bot",
    "aiolimiter",
    "py-partiql-parser",
    "fastapi-crudrouter",
    "ormar",
    "databases",
    "pytest-random-num",
    "python-ffmpeg",
]

[tool.pdm.conda.optional-dependencies]
prefect-agent = [
    "ffmpeg~=6.0.0",
]

[tool.pdm]
package-type = "application"
plugins = [
    "pdm-backend",
]

[tool.pdm.version]
source = "file"
path = "src/pdm_conda/__init__.py"

[tool.pdm.build]
package-dir = "src"
includes = ["src", "data/*.json"]
excludes = ["tests"]

[tool.pdm.scripts]
test = "pytest --cov=src/ tests/{args} --cov-report xml --cov-report term"
fix-report = "python scripts/fix_report.py"
test-cov = { composite = ["test {args}", "fix-report"] }

[tool.pytest.ini_options]
addopts = "--random-order"
filterwarnings = [
    "ignore::pytest.PytestReturnNotNoneWarning"
]

[tool.mypy]
python_version = "3.10"
pretty = true

[tool.isort]
honor_noqa = true
profile = "black"
combine_star = true
remove_redundant_aliases = true
multi_line_output = 3

[tool.black]
line-length = 120

[tool.flake8]
inline-quotes = "double"
max-line-length = 120
extend-ignore = [
    # black
    "E203", "W503",
    # Too broad except
    "E722",
    # Missing docstring in __init__
    "D107",
    # Found `__init__.py` module with logic
    "WPS412", "WPS326",
]

per-file-ignores = [
    # all init files
    "__init__.py:",
    # ignore not used imports
    "F401",
    # ignore import with wildcard
    "F403",
    # Found wrong metadata variable
    "WPS410",
    # all tests
    "test_*.py,tests.py,tests_*.py,*/tests/*,conftest.py:",
    # Use of assert detected
    "S101",
    # Found outer scope names shadowing
    "WPS442",
    # Found too many local variables
    "WPS210",
    # Found magic number
    "WPS432",
    # Missing parameter(s) in Docstring
    "DAR101",
    # Found too many arguments
    "WPS211",
]

exclude = [
    "./.git",
    "./venv",
    "migrations",
    "./var",
]
