[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project.urls]
Homepage = "https://github.com/macro128/pdm-conda"
Changelog = "https://github.com/macro128/pdm-conda/blob/main/CHANGELOG.md"

[project.entry-points.pdm]
conda = "pdm_conda:main"

[project]
name = "pdm-conda"
description = "A PDM plugin to resolve/install/uninstall project dependencies with Conda"
requires-python = ">=3.10,<3.13"
authors = [
    { name = "Marcos Pastorini" }
]
keywords = ["pdm", "plugin", "conda"]
readme = "README.md"
license = { text = "MIT" }
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

dependencies = [
    "pdm==2.15.2",
    "typing-extensions>=4.10.0",
    "httpx>=0.27.0",
]

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=8.0.2",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "pytest-random-num>=1.0.13",
    "pytest-order>=1.2.0",
    "pytest-httpx>=0.30.0",
]

[tool.pdm]
distribution = true
plugins = [
    "pdm-backend",
]

[tool.pdm.version]
source = "file"
path = "src/pdm_conda/__init__.py"

[tool.pdm.build]
package-dir = "src"
includes = ["src", "data/*.json"]
excludes = ["tests"]

[tool.pdm.scripts]
test = "pytest --cov=src/ tests/{args} --cov-report xml --cov-report term"
fix-report = "python scripts/fix_report.py"
test-cov = { composite = ["test {args}", "fix-report"], keep_going = true }

[tool.pytest.ini_options]
addopts = "--random-order -x -m \"not manual_only\""
filterwarnings = [
    "ignore::pytest.PytestReturnNotNoneWarning"
]

[tool.mypy]
python_version = "3.10"
pretty = true
check_untyped_defs = true

[tool.docformatter]
recursive = true
style = "sphinx"
wrap-summaries = 120
wrap-descriptions = 120

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
    # sorting imports
    "I",
    "ICN",
    # async checks
    "ASYNC",
    # bugbear
    "B",
    # builtins shadowing
    "A",
    # trailing commas
    "COM",
    # comprehensions
    "C4",
    # debugger trace
    "T10",
    # package init
    "INP",
    # string concat
    "ISC",
    # misc fixes
    "PIE",
    # pytest
    "PT",
    # raise
    "RSE",
    # return
    "RET",
    # simplify
    "SIM",
    # future annotation
    "FA",
    # prefer pathlib
    "PTH",
    # pyupgrade
    "UP",
]
extend-safe-fixes = ["UP", "I", "C4"]
ignore = [
    # Too broad except
    "E722",
    # Missing docstring in __init__
    "D107",
    # Missing trailing comma
    "COM812",
    # Add leading underscore
    "PT004",
    # Non PEP604
    "UP038",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false
known-local-folder = ["src", "tests", "pdm-conda"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"
parametrize-values-row-type = "list"

[tool.ruff.lint.per-file-ignores]
# all init files
"__init__.py" = [
    # ignore not used imports
    "F401",
    # ignore import with wildcard
    "F403",
]

# all tests
"**/tests/*" = [
    # Use of assert detected
    "S101",
    "D"
]
